{"expireTime":9007200872306530000,"key":"gatsby-plugin-mdx-entire-payload-cca22ff1bbbf4d97c45f34b6e41e111e-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/Developement/Assignment Tasks/Plasm/src/layouts/docs.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":87,"offset":88},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":90},"end":{"line":5,"column":29,"offset":118},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The data fetching logic is split from the rest of the code for better tree-shaking, \ni.e. so that it does not get packaged into your code unless it is used.\nThe SDK is otherwise unconcerned with how you get data from the blockchain.","position":{"start":{"line":8,"column":1,"offset":122},"end":{"line":10,"column":76,"offset":356},"indent":[1,1]}}],"position":{"start":{"line":8,"column":1,"offset":122},"end":{"line":10,"column":76,"offset":356},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This class contains static methods for constructing instances of pairs and tokens \nfrom on-chain data. It cannot be constructed.","position":{"start":{"line":12,"column":1,"offset":360},"end":{"line":13,"column":46,"offset":489},"indent":[1]}}],"position":{"start":{"line":12,"column":1,"offset":360},"end":{"line":13,"column":46,"offset":489},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Static Methods","position":{"start":{"line":15,"column":3,"offset":495},"end":{"line":15,"column":17,"offset":509},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":493},"end":{"line":15,"column":17,"offset":509},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"fetchTokenData","position":{"start":{"line":17,"column":4,"offset":516},"end":{"line":17,"column":18,"offset":530},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":513},"end":{"line":17,"column":18,"offset":530},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"async fetchTokenData(\n  chainId: ChainId,\n  address: string,\n  provider = getDefaultProvider(getNetwork(chainId)),\n  symbol?: string,\n  name?: string\n): Promise<Token>","position":{"start":{"line":19,"column":1,"offset":534},"end":{"line":27,"column":4,"offset":727},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Initializes a class instance from a chainId and token address, if the decimals of the token are unknown and cannot be fetched externally. Decimals are fetched via an ","position":{"start":{"line":29,"column":1,"offset":731},"end":{"line":29,"column":167,"offset":897},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/ethers-io/ethers.js/","children":[{"type":"text","value":"ethers.js","position":{"start":{"line":29,"column":168,"offset":898},"end":{"line":29,"column":177,"offset":907},"indent":[]}}],"position":{"start":{"line":29,"column":167,"offset":897},"end":{"line":29,"column":219,"offset":949},"indent":[]}},{"type":"text","value":" v5 provider. If not passed in, a default provider is used.","position":{"start":{"line":29,"column":219,"offset":949},"end":{"line":29,"column":278,"offset":1008},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":731},"end":{"line":29,"column":278,"offset":1008},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"fetchPairData","position":{"start":{"line":31,"column":4,"offset":1015},"end":{"line":31,"column":17,"offset":1028},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1012},"end":{"line":31,"column":17,"offset":1028},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"async fetchPairData(\n  tokenA: Token,\n  tokenB: Token,\n  provider = getDefaultProvider(getNetwork(tokenA.chainId))\n): Promise<Pair>","position":{"start":{"line":33,"column":1,"offset":1032},"end":{"line":39,"column":4,"offset":1187},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Initializes a class instance from two Tokens, if the pair's balances of these tokens are unknown and cannot be fetched externally. Pair reserves are fetched via an ","position":{"start":{"line":41,"column":1,"offset":1191},"end":{"line":41,"column":165,"offset":1355},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/ethers-io/ethers.js/","children":[{"type":"text","value":"ethers.js","position":{"start":{"line":41,"column":166,"offset":1356},"end":{"line":41,"column":175,"offset":1365},"indent":[]}}],"position":{"start":{"line":41,"column":165,"offset":1355},"end":{"line":41,"column":217,"offset":1407},"indent":[]}},{"type":"text","value":" v5 provider. If not passed in, a default provider is used.","position":{"start":{"line":41,"column":217,"offset":1407},"end":{"line":41,"column":276,"offset":1466},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1191},"end":{"line":41,"column":276,"offset":1466},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":44,"column":1,"offset":1470},"end":{"line":44,"column":31,"offset":1500},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":44,"column":31,"offset":1500}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/Developement/Assignment Tasks/Plasm/src/layouts/docs.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`The data fetching logic is split from the rest of the code for better tree-shaking,\ni.e. so that it does not get packaged into your code unless it is used.\nThe SDK is otherwise unconcerned with how you get data from the blockchain.`}</p>\n    <p>{`This class contains static methods for constructing instances of pairs and tokens\nfrom on-chain data. It cannot be constructed.`}</p>\n    <h1 {...{\n      \"id\": \"static-methods\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#static-methods\",\n        \"aria-label\": \"static methods permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Static Methods`}</h1>\n    <h2 {...{\n      \"id\": \"fetchtokendata\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#fetchtokendata\",\n        \"aria-label\": \"fetchtokendata permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`fetchTokenData`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`async fetchTokenData(\n  chainId: ChainId,\n  address: string,\n  provider = getDefaultProvider(getNetwork(chainId)),\n  symbol?: string,\n  name?: string\n): Promise<Token>\n`}</code></pre>\n    <p>{`Initializes a class instance from a chainId and token address, if the decimals of the token are unknown and cannot be fetched externally. Decimals are fetched via an `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ethers-io/ethers.js/\"\n      }}>{`ethers.js`}</a>{` v5 provider. If not passed in, a default provider is used.`}</p>\n    <h2 {...{\n      \"id\": \"fetchpairdata\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#fetchpairdata\",\n        \"aria-label\": \"fetchpairdata permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`fetchPairData`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`async fetchPairData(\n  tokenA: Token,\n  tokenB: Token,\n  provider = getDefaultProvider(getNetwork(tokenA.chainId))\n): Promise<Pair>\n`}</code></pre>\n    <p>{`Initializes a class instance from two Tokens, if the pair’s balances of these tokens are unknown and cannot be fetched externally. Pair reserves are fetched via an `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ethers-io/ethers.js/\"\n      }}>{`ethers.js`}</a>{` v5 provider. If not passed in, a default provider is used.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}