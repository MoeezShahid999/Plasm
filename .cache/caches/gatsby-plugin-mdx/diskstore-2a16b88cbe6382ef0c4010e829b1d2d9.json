{"expireTime":9007200872306492000,"key":"gatsby-plugin-mdx-entire-payload-02c9accf1be004c3f0a34ef00180ec9b-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Audit & Formal Verification","position":{"start":{"line":2,"column":3,"offset":4},"end":{"line":2,"column":30,"offset":31},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":30,"offset":31},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Between January 8 and April 30, a team of six engineers reviewed and formally verified crucial components of the smart contracts for Kwikswap.","position":{"start":{"line":4,"column":1,"offset":35},"end":{"line":4,"column":143,"offset":177},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":35},"end":{"line":4,"column":143,"offset":177},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Their past work includes smart contract development on and formal verification of multi-collateral DAI.","position":{"start":{"line":6,"column":1,"offset":181},"end":{"line":6,"column":104,"offset":284},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":181},"end":{"line":6,"column":104,"offset":284},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The scope of work includes:","position":{"start":{"line":8,"column":1,"offset":288},"end":{"line":8,"column":28,"offset":315},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":288},"end":{"line":8,"column":28,"offset":315},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Formal verification of the core smart contracts","position":{"start":{"line":10,"column":3,"offset":321},"end":{"line":10,"column":50,"offset":368},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":321},"end":{"line":10,"column":50,"offset":368},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":319},"end":{"line":10,"column":50,"offset":368},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Code review of core smart contracts","position":{"start":{"line":11,"column":3,"offset":372},"end":{"line":11,"column":38,"offset":407},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":372},"end":{"line":11,"column":38,"offset":407},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":370},"end":{"line":11,"column":38,"offset":407},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Numerical error analysis","position":{"start":{"line":12,"column":3,"offset":411},"end":{"line":12,"column":27,"offset":435},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":411},"end":{"line":12,"column":27,"offset":435},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":409},"end":{"line":12,"column":27,"offset":435},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Code review of periphery smart contracts (during ongoing development)","position":{"start":{"line":13,"column":3,"offset":439},"end":{"line":13,"column":72,"offset":508},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":439},"end":{"line":13,"column":72,"offset":508},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":437},"end":{"line":13,"column":72,"offset":508},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":319},"end":{"line":13,"column":72,"offset":508},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Bug Bounty","position":{"start":{"line":16,"column":3,"offset":516},"end":{"line":16,"column":13,"offset":526},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":514},"end":{"line":16,"column":13,"offset":526},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Kwikswap has an open and ongoing bug ","position":{"start":{"line":18,"column":1,"offset":530},"end":{"line":18,"column":38,"offset":567},"indent":[]}},{"type":"link","title":null,"url":"/bug-bounty","children":[{"type":"text","value":"bounty program","position":{"start":{"line":18,"column":39,"offset":568},"end":{"line":18,"column":53,"offset":582},"indent":[]}}],"position":{"start":{"line":18,"column":38,"offset":567},"end":{"line":18,"column":67,"offset":596},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":18,"column":67,"offset":596},"end":{"line":18,"column":68,"offset":597},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":530},"end":{"line":18,"column":68,"offset":597},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Considerations when building on Kwikswap","position":{"start":{"line":20,"column":3,"offset":603},"end":{"line":20,"column":43,"offset":643},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":601},"end":{"line":20,"column":43,"offset":643},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When integrating Kwikswap into another on-chain system, particular care must be taken to avoid security vulnerabilities, avenues for manipulations, and the potential loss of funds.","position":{"start":{"line":22,"column":1,"offset":647},"end":{"line":22,"column":181,"offset":827},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":647},"end":{"line":22,"column":181,"offset":827},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As a preliminary note: smart contract integrations can happen at two levels: directly with ","position":{"start":{"line":24,"column":1,"offset":831},"end":{"line":24,"column":92,"offset":922},"indent":[]}},{"type":"jsx","value":"<Link to='/docs/v1/smart-contracts/pair'>","position":{"start":{"line":24,"column":92,"offset":922},"end":{"line":24,"column":133,"offset":963},"indent":[]}},{"type":"text","value":"Pair","position":{"start":{"line":24,"column":133,"offset":963},"end":{"line":24,"column":137,"offset":967},"indent":[]}},{"type":"jsx","value":"</Link>","position":{"start":{"line":24,"column":137,"offset":967},"end":{"line":24,"column":144,"offset":974},"indent":[]}},{"type":"text","value":" contracts, or through the ","position":{"start":{"line":24,"column":144,"offset":974},"end":{"line":24,"column":171,"offset":1001},"indent":[]}},{"type":"jsx","value":"<Link to='/docs/v1/smart-contracts/router02'>","position":{"start":{"line":24,"column":171,"offset":1001},"end":{"line":24,"column":216,"offset":1046},"indent":[]}},{"type":"text","value":"Router","position":{"start":{"line":24,"column":216,"offset":1046},"end":{"line":24,"column":222,"offset":1052},"indent":[]}},{"type":"jsx","value":"</Link>","position":{"start":{"line":24,"column":222,"offset":1052},"end":{"line":24,"column":229,"offset":1059},"indent":[]}},{"type":"text","value":". Direct interactions offer maximal flexibility, but require the most work to get right. Mediated interactions offer more limited capabilities, but stronger safety guarantees.","position":{"start":{"line":24,"column":229,"offset":1059},"end":{"line":24,"column":404,"offset":1234},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":831},"end":{"line":24,"column":404,"offset":1234},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are two primary categories of risk associated with Kwikswap. The first involves so-called \"static\" errors: accidentally sending too many tokens to a pair during a swap (or requesting too few tokens back), allowing transactions to linger in the mempool long enough for the sender's expectations about prices to no longer be true, etc. These errors are typically addressed with fairly straightforward logic checks. ","position":{"start":{"line":26,"column":1,"offset":1238},"end":{"line":26,"column":420,"offset":1657},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Performing these checks is the primary reason for the existence of routers","position":{"start":{"line":26,"column":421,"offset":1658},"end":{"line":26,"column":495,"offset":1732},"indent":[]}}],"position":{"start":{"line":26,"column":420,"offset":1657},"end":{"line":26,"column":496,"offset":1733},"indent":[]}},{"type":"text","value":". Those who interact directly with pairs must perform these checks themselves (with the help of the ","position":{"start":{"line":26,"column":496,"offset":1733},"end":{"line":26,"column":596,"offset":1833},"indent":[]}},{"type":"jsx","value":"<Link to='/docs/v1/smart-contracts/library'>","position":{"start":{"line":26,"column":596,"offset":1833},"end":{"line":26,"column":640,"offset":1877},"indent":[]}},{"type":"text","value":"Library","position":{"start":{"line":26,"column":640,"offset":1877},"end":{"line":26,"column":647,"offset":1884},"indent":[]}},{"type":"jsx","value":"</Link>","position":{"start":{"line":26,"column":647,"offset":1884},"end":{"line":26,"column":654,"offset":1891},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":26,"column":654,"offset":1891},"end":{"line":26,"column":656,"offset":1893},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1238},"end":{"line":26,"column":656,"offset":1893},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The second risk category is \"dynamic\", and involves runtime pricing. Because Ethereum transactions occur in an adversarial environment, naively written smart contracts ","position":{"start":{"line":28,"column":1,"offset":1897},"end":{"line":28,"column":169,"offset":2065},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"can be exploited for profit","position":{"start":{"line":28,"column":170,"offset":2066},"end":{"line":28,"column":197,"offset":2093},"indent":[]}}],"position":{"start":{"line":28,"column":169,"offset":2065},"end":{"line":28,"column":198,"offset":2094},"indent":[]}},{"type":"text","value":". For example, if a smart contract checks the asset ratio in a Kwikswap pool at runtime and trades against it, assuming that the ratio represents the \"fair\" or \"market\" price of these assets, ","position":{"start":{"line":28,"column":198,"offset":2094},"end":{"line":28,"column":390,"offset":2286},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"it is highly vulnerable to manipulation","position":{"start":{"line":28,"column":391,"offset":2287},"end":{"line":28,"column":430,"offset":2326},"indent":[]}}],"position":{"start":{"line":28,"column":390,"offset":2286},"end":{"line":28,"column":431,"offset":2327},"indent":[]}},{"type":"text","value":". A malicious actor could e.g. trivially insert transactions before and after the naive transaction (a so-called \"sandwich\" attack) causing the smart contract to trade at a radically worse price, profit from this at the trader's expense, and then return the contracts to their original state, all at a low cost. (One important caveat is that these types of attacks are mitigated by trading in extremely liquid pools, and/or at low values.)","position":{"start":{"line":28,"column":431,"offset":2327},"end":{"line":28,"column":870,"offset":2766},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1897},"end":{"line":28,"column":870,"offset":2766},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The best way to protect against these attacks is to introduce a price oracle. The best \"oracle\" is simply ","position":{"start":{"line":30,"column":1,"offset":2770},"end":{"line":30,"column":107,"offset":2876},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"traders' off-chain observation of the prevailing price","position":{"start":{"line":30,"column":108,"offset":2877},"end":{"line":30,"column":162,"offset":2931},"indent":[]}}],"position":{"start":{"line":30,"column":107,"offset":2876},"end":{"line":30,"column":163,"offset":2932},"indent":[]}},{"type":"text","value":", which can be passed into the trade as a safety check. This strategy is best suited to retail trading venues ","position":{"start":{"line":30,"column":163,"offset":2932},"end":{"line":30,"column":273,"offset":3042},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"where users initiate trades on their own behalf","position":{"start":{"line":30,"column":274,"offset":3043},"end":{"line":30,"column":321,"offset":3090},"indent":[]}}],"position":{"start":{"line":30,"column":273,"offset":3042},"end":{"line":30,"column":322,"offset":3091},"indent":[]}},{"type":"text","value":". However, it is often the case that a trusted price observation cannot be obtained (e.g. in multi-step, programmatic interactions involving Kwikswap). Without a price oracle, these interactions are forced to trade at whatever the (potentially manipulated) rate on Kwikswap is. However, an oracle can bound manipulation, and is a sine qua non. Determining the ideal oracle for a given setting is out of scope, but for details on the Kwikswap approach to oracles, see ","position":{"start":{"line":30,"column":322,"offset":3091},"end":{"line":30,"column":789,"offset":3558},"indent":[]}},{"type":"jsx","value":"<Link to='/docs/v1/core-concepts/oracles'>","position":{"start":{"line":30,"column":789,"offset":3558},"end":{"line":30,"column":831,"offset":3600},"indent":[]}},{"type":"text","value":"Oracles","position":{"start":{"line":30,"column":831,"offset":3600},"end":{"line":30,"column":838,"offset":3607},"indent":[]}},{"type":"jsx","value":"</Link>","position":{"start":{"line":30,"column":838,"offset":3607},"end":{"line":30,"column":845,"offset":3614},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":30,"column":845,"offset":3614},"end":{"line":30,"column":846,"offset":3615},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":2770},"end":{"line":30,"column":846,"offset":3615},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Security\",\"tags\":\"advanced-topics, documentation\"}","position":{"start":{"line":33,"column":1,"offset":3619},"end":{"line":33,"column":89,"offset":3707},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":33,"column":89,"offset":3707}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Security\",\n  \"tags\": \"advanced-topics, documentation\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Link = makeShortcode(\"Link\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"audit--formal-verification\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#audit--formal-verification\",\n    \"aria-label\": \"audit  formal verification permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Audit & Formal Verification\"), mdx(\"p\", null, \"Between January 8 and April 30, a team of six engineers reviewed and formally verified crucial components of the smart contracts for Kwikswap.\"), mdx(\"p\", null, \"Their past work includes smart contract development on and formal verification of multi-collateral DAI.\"), mdx(\"p\", null, \"The scope of work includes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Formal verification of the core smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Code review of core smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Numerical error analysis\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Code review of periphery smart contracts (during ongoing development)\")), mdx(\"h1\", {\n    \"id\": \"bug-bounty\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#bug-bounty\",\n    \"aria-label\": \"bug bounty permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Bug Bounty\"), mdx(\"p\", null, \"Kwikswap has an open and ongoing bug \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/bug-bounty\"\n  }, \"bounty program\"), \".\"), mdx(\"h1\", {\n    \"id\": \"considerations-when-building-on-kwikswap\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#considerations-when-building-on-kwikswap\",\n    \"aria-label\": \"considerations when building on kwikswap permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Considerations when building on Kwikswap\"), mdx(\"p\", null, \"When integrating Kwikswap into another on-chain system, particular care must be taken to avoid security vulnerabilities, avenues for manipulations, and the potential loss of funds.\"), mdx(\"p\", null, \"As a preliminary note: smart contract integrations can happen at two levels: directly with \", mdx(Link, {\n    to: \"/docs/v1/smart-contracts/pair\",\n    mdxType: \"Link\"\n  }, \"Pair\"), \" contracts, or through the \", mdx(Link, {\n    to: \"/docs/v1/smart-contracts/router02\",\n    mdxType: \"Link\"\n  }, \"Router\"), \". Direct interactions offer maximal flexibility, but require the most work to get right. Mediated interactions offer more limited capabilities, but stronger safety guarantees.\"), mdx(\"p\", null, \"There are two primary categories of risk associated with Kwikswap. The first involves so-called \\u201Cstatic\\u201D errors: accidentally sending too many tokens to a pair during a swap (or requesting too few tokens back), allowing transactions to linger in the mempool long enough for the sender\\u2019s expectations about prices to no longer be true, etc. These errors are typically addressed with fairly straightforward logic checks. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Performing these checks is the primary reason for the existence of routers\"), \". Those who interact directly with pairs must perform these checks themselves (with the help of the \", mdx(Link, {\n    to: \"/docs/v1/smart-contracts/library\",\n    mdxType: \"Link\"\n  }, \"Library\"), \").\"), mdx(\"p\", null, \"The second risk category is \\u201Cdynamic\\u201D, and involves runtime pricing. Because Ethereum transactions occur in an adversarial environment, naively written smart contracts \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"can be exploited for profit\"), \". For example, if a smart contract checks the asset ratio in a Kwikswap pool at runtime and trades against it, assuming that the ratio represents the \\u201Cfair\\u201D or \\u201Cmarket\\u201D price of these assets, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"it is highly vulnerable to manipulation\"), \". A malicious actor could e.g. trivially insert transactions before and after the naive transaction (a so-called \\u201Csandwich\\u201D attack) causing the smart contract to trade at a radically worse price, profit from this at the trader\\u2019s expense, and then return the contracts to their original state, all at a low cost. (One important caveat is that these types of attacks are mitigated by trading in extremely liquid pools, and/or at low values.)\"), mdx(\"p\", null, \"The best way to protect against these attacks is to introduce a price oracle. The best \\u201Coracle\\u201D is simply \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"traders\\u2019 off-chain observation of the prevailing price\"), \", which can be passed into the trade as a safety check. This strategy is best suited to retail trading venues \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"where users initiate trades on their own behalf\"), \". However, it is often the case that a trusted price observation cannot be obtained (e.g. in multi-step, programmatic interactions involving Kwikswap). Without a price oracle, these interactions are forced to trade at whatever the (potentially manipulated) rate on Kwikswap is. However, an oracle can bound manipulation, and is a sine qua non. Determining the ideal oracle for a given setting is out of scope, but for details on the Kwikswap approach to oracles, see \", mdx(Link, {\n    to: \"/docs/v1/core-concepts/oracles\",\n    mdxType: \"Link\"\n  }, \"Oracles\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Security\",\n  \"tags\": \"advanced-topics, documentation\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"audit--formal-verification\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#audit--formal-verification\",\n        \"aria-label\": \"audit  formal verification permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Audit & Formal Verification`}</h1>\n    <p>{`Between January 8 and April 30, a team of six engineers reviewed and formally verified crucial components of the smart contracts for Kwikswap.`}</p>\n    <p>{`Their past work includes smart contract development on and formal verification of multi-collateral DAI.`}</p>\n    <p>{`The scope of work includes:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Formal verification of the core smart contracts`}</li>\n      <li parentName=\"ul\">{`Code review of core smart contracts`}</li>\n      <li parentName=\"ul\">{`Numerical error analysis`}</li>\n      <li parentName=\"ul\">{`Code review of periphery smart contracts (during ongoing development)`}</li>\n    </ul>\n    <h1 {...{\n      \"id\": \"bug-bounty\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#bug-bounty\",\n        \"aria-label\": \"bug bounty permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Bug Bounty`}</h1>\n    <p>{`Kwikswap has an open and ongoing bug `}<a parentName=\"p\" {...{\n        \"href\": \"/bug-bounty\"\n      }}>{`bounty program`}</a>{`.`}</p>\n    <h1 {...{\n      \"id\": \"considerations-when-building-on-kwikswap\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#considerations-when-building-on-kwikswap\",\n        \"aria-label\": \"considerations when building on kwikswap permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Considerations when building on Kwikswap`}</h1>\n    <p>{`When integrating Kwikswap into another on-chain system, particular care must be taken to avoid security vulnerabilities, avenues for manipulations, and the potential loss of funds.`}</p>\n    <p>{`As a preliminary note: smart contract integrations can happen at two levels: directly with `}<Link to='/docs/v1/smart-contracts/pair' mdxType=\"Link\">{`Pair`}</Link>{` contracts, or through the `}<Link to='/docs/v1/smart-contracts/router02' mdxType=\"Link\">{`Router`}</Link>{`. Direct interactions offer maximal flexibility, but require the most work to get right. Mediated interactions offer more limited capabilities, but stronger safety guarantees.`}</p>\n    <p>{`There are two primary categories of risk associated with Kwikswap. The first involves so-called “static” errors: accidentally sending too many tokens to a pair during a swap (or requesting too few tokens back), allowing transactions to linger in the mempool long enough for the sender’s expectations about prices to no longer be true, etc. These errors are typically addressed with fairly straightforward logic checks. `}<em parentName=\"p\">{`Performing these checks is the primary reason for the existence of routers`}</em>{`. Those who interact directly with pairs must perform these checks themselves (with the help of the `}<Link to='/docs/v1/smart-contracts/library' mdxType=\"Link\">{`Library`}</Link>{`).`}</p>\n    <p>{`The second risk category is “dynamic”, and involves runtime pricing. Because Ethereum transactions occur in an adversarial environment, naively written smart contracts `}<em parentName=\"p\">{`can be exploited for profit`}</em>{`. For example, if a smart contract checks the asset ratio in a Kwikswap pool at runtime and trades against it, assuming that the ratio represents the “fair” or “market” price of these assets, `}<em parentName=\"p\">{`it is highly vulnerable to manipulation`}</em>{`. A malicious actor could e.g. trivially insert transactions before and after the naive transaction (a so-called “sandwich” attack) causing the smart contract to trade at a radically worse price, profit from this at the trader’s expense, and then return the contracts to their original state, all at a low cost. (One important caveat is that these types of attacks are mitigated by trading in extremely liquid pools, and/or at low values.)`}</p>\n    <p>{`The best way to protect against these attacks is to introduce a price oracle. The best “oracle” is simply `}<em parentName=\"p\">{`traders’ off-chain observation of the prevailing price`}</em>{`, which can be passed into the trade as a safety check. This strategy is best suited to retail trading venues `}<em parentName=\"p\">{`where users initiate trades on their own behalf`}</em>{`. However, it is often the case that a trusted price observation cannot be obtained (e.g. in multi-step, programmatic interactions involving Kwikswap). Without a price oracle, these interactions are forced to trade at whatever the (potentially manipulated) rate on Kwikswap is. However, an oracle can bound manipulation, and is a sine qua non. Determining the ideal oracle for a given setting is out of scope, but for details on the Kwikswap approach to oracles, see `}<Link to='/docs/v1/core-concepts/oracles' mdxType=\"Link\">{`Oracles`}</Link>{`.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}