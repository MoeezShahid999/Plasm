{"expireTime":9007200872306530000,"key":"gatsby-plugin-mdx-entire-payload-fbf758cb2f7a46e6c65fae162626bffd-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/Developement/Assignment Tasks/Plasm/src/layouts/docs.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":87,"offset":88},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":90},"end":{"line":5,"column":29,"offset":118},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"constructor(route: Route, amount: TokenAmount, tradeType: TradeType)","position":{"start":{"line":8,"column":1,"offset":122},"end":{"line":10,"column":4,"offset":210},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The Trade entity represents a fully specified trade along a route. This entity supplies all the information necessary to craft a router transaction.","position":{"start":{"line":12,"column":1,"offset":214},"end":{"line":12,"column":149,"offset":362},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":214},"end":{"line":12,"column":149,"offset":362},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Example","position":{"start":{"line":14,"column":3,"offset":368},"end":{"line":14,"column":10,"offset":375},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":366},"end":{"line":14,"column":10,"offset":375},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"import { ChainId, Token, TokenAmount, Pair, TradeType, Route } from '@kwikswap/sdk'\n\nconst HOT = new Token(ChainId.MAINNET, '0xc0FFee0000000000000000000000000000000000', 18, 'HOT', 'Caffeine')\nconst NOT = new Token(ChainId.MAINNET, '0xDeCAf00000000000000000000000000000000000', 18, 'NOT', 'Caffeine')\nconst HOT_NOT = new Pair(new TokenAmount(HOT, '2000000000000000000'), new TokenAmount(NOT, '1000000000000000000'))\nconst NOT_TO_HOT = new Route([HOT_NOT], NOT)\n\nconst trade = new Trade(NOT_TO_HOT, new TokenAmount(NOT, '1000000000000000'), TradeType.EXACT_INPUT)","position":{"start":{"line":16,"column":1,"offset":379},"end":{"line":25,"column":4,"offset":968},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Properties","position":{"start":{"line":27,"column":3,"offset":974},"end":{"line":27,"column":13,"offset":984},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":972},"end":{"line":27,"column":13,"offset":984},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"route","position":{"start":{"line":29,"column":4,"offset":991},"end":{"line":29,"column":9,"offset":996},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":988},"end":{"line":29,"column":9,"offset":996},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"route: Route","position":{"start":{"line":31,"column":1,"offset":1000},"end":{"line":33,"column":4,"offset":1032},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":35,"column":1,"offset":1036},"end":{"line":35,"column":5,"offset":1040},"indent":[]}},{"type":"jsx","value":"<Link to='/docs/v1/SDK/route#path'>","position":{"start":{"line":35,"column":5,"offset":1040},"end":{"line":35,"column":40,"offset":1075},"indent":[]}},{"type":"text","value":"path","position":{"start":{"line":35,"column":40,"offset":1075},"end":{"line":35,"column":44,"offset":1079},"indent":[]}},{"type":"jsx","value":"</Link>","position":{"start":{"line":35,"column":44,"offset":1079},"end":{"line":35,"column":51,"offset":1086},"indent":[]}},{"type":"text","value":" property of the route should be passed as the path parameter to router functions.","position":{"start":{"line":35,"column":51,"offset":1086},"end":{"line":35,"column":133,"offset":1168},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1036},"end":{"line":35,"column":133,"offset":1168},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"tradeType","position":{"start":{"line":37,"column":4,"offset":1175},"end":{"line":37,"column":13,"offset":1184},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1172},"end":{"line":37,"column":13,"offset":1184},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"tradeType: TradeType","position":{"start":{"line":39,"column":1,"offset":1188},"end":{"line":41,"column":4,"offset":1228},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"TradeType.EXACT_INPUT","position":{"start":{"line":43,"column":1,"offset":1232},"end":{"line":43,"column":24,"offset":1255},"indent":[]}},{"type":"text","value":" corresponds to ","position":{"start":{"line":43,"column":24,"offset":1255},"end":{"line":43,"column":40,"offset":1271},"indent":[]}},{"type":"inlineCode","value":"swapExact*For*","position":{"start":{"line":43,"column":40,"offset":1271},"end":{"line":43,"column":56,"offset":1287},"indent":[]}},{"type":"text","value":" router functions. ","position":{"start":{"line":43,"column":56,"offset":1287},"end":{"line":43,"column":75,"offset":1306},"indent":[]}},{"type":"inlineCode","value":"TradeType.EXACT_OUTPUT","position":{"start":{"line":43,"column":75,"offset":1306},"end":{"line":43,"column":99,"offset":1330},"indent":[]}},{"type":"text","value":" corresponds to ","position":{"start":{"line":43,"column":99,"offset":1330},"end":{"line":43,"column":115,"offset":1346},"indent":[]}},{"type":"inlineCode","value":"swap*ForExact*","position":{"start":{"line":43,"column":115,"offset":1346},"end":{"line":43,"column":131,"offset":1362},"indent":[]}},{"type":"text","value":" router functions.","position":{"start":{"line":43,"column":131,"offset":1362},"end":{"line":43,"column":149,"offset":1380},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1232},"end":{"line":43,"column":149,"offset":1380},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"inputAmount","position":{"start":{"line":45,"column":4,"offset":1387},"end":{"line":45,"column":15,"offset":1398},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1384},"end":{"line":45,"column":15,"offset":1398},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"inputAmount: TokenAmount","position":{"start":{"line":47,"column":1,"offset":1402},"end":{"line":49,"column":4,"offset":1446},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For exact input trades, this value should be passed as amountIn to router functions. For exact output trades, this value should be multiplied by a factor >1, representing slippage tolerance, and passed as amountInMax to router functions.","position":{"start":{"line":51,"column":1,"offset":1450},"end":{"line":51,"column":238,"offset":1687},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1450},"end":{"line":51,"column":238,"offset":1687},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"outputAmount","position":{"start":{"line":53,"column":4,"offset":1694},"end":{"line":53,"column":16,"offset":1706},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1691},"end":{"line":53,"column":16,"offset":1706},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"outputAmount: TokenAmount","position":{"start":{"line":55,"column":1,"offset":1710},"end":{"line":57,"column":4,"offset":1755},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For exact output trades, this value should be passed as amountOut to router functions. For exact input trades, this value should be multiplied by a factor <1, representing slippage tolerance, and passed as amountOutMin to router functions.","position":{"start":{"line":59,"column":1,"offset":1759},"end":{"line":59,"column":240,"offset":1998},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1759},"end":{"line":59,"column":240,"offset":1998},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"executionPrice","position":{"start":{"line":61,"column":4,"offset":2005},"end":{"line":61,"column":18,"offset":2019},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2002},"end":{"line":61,"column":18,"offset":2019},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"executionPrice: Price","position":{"start":{"line":63,"column":1,"offset":2023},"end":{"line":65,"column":4,"offset":2064},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The average price that the trade would execute at.","position":{"start":{"line":67,"column":1,"offset":2068},"end":{"line":67,"column":51,"offset":2118},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2068},"end":{"line":67,"column":51,"offset":2118},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"nextMidPrice","position":{"start":{"line":69,"column":4,"offset":2125},"end":{"line":69,"column":16,"offset":2137},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":2122},"end":{"line":69,"column":16,"offset":2137},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"nextMidPrice: Price","position":{"start":{"line":71,"column":1,"offset":2141},"end":{"line":73,"column":4,"offset":2180},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"What the new mid price would be if the trade were to execute.","position":{"start":{"line":75,"column":1,"offset":2184},"end":{"line":75,"column":62,"offset":2245},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2184},"end":{"line":75,"column":62,"offset":2245},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"slippage","position":{"start":{"line":77,"column":4,"offset":2252},"end":{"line":77,"column":12,"offset":2260},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2249},"end":{"line":77,"column":12,"offset":2260},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"slippage: Percent","position":{"start":{"line":79,"column":1,"offset":2264},"end":{"line":81,"column":4,"offset":2301},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The slippage incurred by the trade.","position":{"start":{"line":83,"column":1,"offset":2305},"end":{"line":83,"column":36,"offset":2340},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":2305},"end":{"line":83,"column":36,"offset":2340},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Strictly > .30%.","position":{"start":{"line":85,"column":3,"offset":2346},"end":{"line":85,"column":19,"offset":2362},"indent":[]}}],"position":{"start":{"line":85,"column":3,"offset":2346},"end":{"line":85,"column":19,"offset":2362},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2344},"end":{"line":85,"column":19,"offset":2362},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2344},"end":{"line":85,"column":19,"offset":2362},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Methods","position":{"start":{"line":87,"column":3,"offset":2368},"end":{"line":87,"column":10,"offset":2375},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2366},"end":{"line":87,"column":10,"offset":2375},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the context of the following two methods, slippage refers to the percent difference between the actual price and the trade ","position":{"start":{"line":89,"column":1,"offset":2379},"end":{"line":89,"column":127,"offset":2505},"indent":[]}},{"type":"inlineCode","value":"executionPrice","position":{"start":{"line":89,"column":127,"offset":2505},"end":{"line":89,"column":143,"offset":2521},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":89,"column":143,"offset":2521},"end":{"line":89,"column":144,"offset":2522},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":2379},"end":{"line":89,"column":144,"offset":2522},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"minimumAmountOut (since 2.0.4)","position":{"start":{"line":91,"column":4,"offset":2529},"end":{"line":91,"column":34,"offset":2559},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":2526},"end":{"line":91,"column":34,"offset":2559},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"minimumAmountOut(slippageTolerance: Percent): TokenAmount","position":{"start":{"line":93,"column":1,"offset":2563},"end":{"line":95,"column":4,"offset":2640},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Returns the minimum amount of the output token that should be received from a trade, given the slippage tolerance.","position":{"start":{"line":97,"column":1,"offset":2644},"end":{"line":97,"column":115,"offset":2758},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":2644},"end":{"line":97,"column":115,"offset":2758},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Useful when constructing a transaction for a trade of type ","position":{"start":{"line":99,"column":1,"offset":2762},"end":{"line":99,"column":60,"offset":2821},"indent":[]}},{"type":"inlineCode","value":"EXACT_IN","position":{"start":{"line":99,"column":60,"offset":2821},"end":{"line":99,"column":70,"offset":2831},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":99,"column":70,"offset":2831},"end":{"line":99,"column":71,"offset":2832},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":2762},"end":{"line":99,"column":71,"offset":2832},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"maximumAmountIn (since 2.0.4)","position":{"start":{"line":101,"column":4,"offset":2839},"end":{"line":101,"column":33,"offset":2868},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":2836},"end":{"line":101,"column":33,"offset":2868},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"maximumAmountIn(slippageTolerance: Percent): TokenAmount","position":{"start":{"line":103,"column":1,"offset":2872},"end":{"line":105,"column":4,"offset":2948},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Returns the maximum amount of the input token that should be spent on the trade, given the slippage tolerance.","position":{"start":{"line":107,"column":1,"offset":2952},"end":{"line":107,"column":111,"offset":3062},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":2952},"end":{"line":107,"column":111,"offset":3062},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Useful when constructing a transaction for a trade of type ","position":{"start":{"line":109,"column":1,"offset":3066},"end":{"line":109,"column":60,"offset":3125},"indent":[]}},{"type":"inlineCode","value":"EXACT_OUT","position":{"start":{"line":109,"column":60,"offset":3125},"end":{"line":109,"column":71,"offset":3136},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":109,"column":71,"offset":3136},"end":{"line":109,"column":72,"offset":3137},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3066},"end":{"line":109,"column":72,"offset":3137},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Static methods","position":{"start":{"line":111,"column":3,"offset":3143},"end":{"line":111,"column":17,"offset":3157},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":3141},"end":{"line":111,"column":17,"offset":3157},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"These static methods provide ways to construct ideal trades from lists of pairs.\nNote these methods do not perform any aggregation across routes, as routes are linear.\nIt's possible that a better price can be had by combining multiple trades across\ndifferent routes.","position":{"start":{"line":113,"column":1,"offset":3161},"end":{"line":116,"column":18,"offset":3430},"indent":[1,1,1]}}],"position":{"start":{"line":113,"column":1,"offset":3161},"end":{"line":116,"column":18,"offset":3430},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"bestTradeExactIn","position":{"start":{"line":118,"column":4,"offset":3437},"end":{"line":118,"column":20,"offset":3453},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":3434},"end":{"line":118,"column":20,"offset":3453},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a list of pairs, a fixed amount in, and token amount out,\nthis method returns the best ","position":{"start":{"line":120,"column":1,"offset":3457},"end":{"line":121,"column":30,"offset":3551},"indent":[1]}},{"type":"inlineCode","value":"maxNumResults","position":{"start":{"line":121,"column":30,"offset":3551},"end":{"line":121,"column":45,"offset":3566},"indent":[]}},{"type":"text","value":" trades that swap\nan input token amount to an output token, making at most ","position":{"start":{"line":121,"column":45,"offset":3566},"end":{"line":122,"column":58,"offset":3642},"indent":[1]}},{"type":"inlineCode","value":"maxHops","position":{"start":{"line":122,"column":58,"offset":3642},"end":{"line":122,"column":67,"offset":3651},"indent":[]}},{"type":"text","value":" hops.\nThe returned trades are sorted by output amount, in decreasing order, and\nall share the given input amount.","position":{"start":{"line":122,"column":67,"offset":3651},"end":{"line":124,"column":34,"offset":3767},"indent":[1,1]}}],"position":{"start":{"line":120,"column":1,"offset":3457},"end":{"line":124,"column":34,"offset":3767},"indent":[1,1,1,1]}},{"type":"code","lang":"typescript","meta":null,"value":"Trade.bestTradeExactIn(\n    pairs: Pair[],\n    amountIn: TokenAmount,\n    tokenOut: Token,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {}): Trade[]","position":{"start":{"line":126,"column":1,"offset":3771},"end":{"line":132,"column":4,"offset":3957},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"bestTradeExactOut","position":{"start":{"line":134,"column":4,"offset":3964},"end":{"line":134,"column":21,"offset":3981},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":3961},"end":{"line":134,"column":21,"offset":3981},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Similar to the above method, but targets a fixed output token amount.\nThe returned trades are sorted by input amount, in increasing order,\nand all share the given output amount.","position":{"start":{"line":136,"column":1,"offset":3985},"end":{"line":138,"column":39,"offset":4164},"indent":[1,1]}}],"position":{"start":{"line":136,"column":1,"offset":3985},"end":{"line":138,"column":39,"offset":4164},"indent":[1,1]}},{"type":"code","lang":"typescript","meta":null,"value":"Trade.bestTradeExactOut(\n    pairs: Pair[],\n    tokenIn: Token,\n    amountOut: TokenAmount,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {}): Trade[]","position":{"start":{"line":140,"column":1,"offset":4168},"end":{"line":146,"column":4,"offset":4355},"indent":[1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":149,"column":1,"offset":4359},"end":{"line":149,"column":31,"offset":4389},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":149,"column":31,"offset":4389}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/Developement/Assignment Tasks/Plasm/src/layouts/docs.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`constructor(route: Route, amount: TokenAmount, tradeType: TradeType)\n`}</code></pre>\n    <p>{`The Trade entity represents a fully specified trade along a route. This entity supplies all the information necessary to craft a router transaction.`}</p>\n    <h1 {...{\n      \"id\": \"example\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#example\",\n        \"aria-label\": \"example permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Example`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import { ChainId, Token, TokenAmount, Pair, TradeType, Route } from '@kwikswap/sdk'\n\nconst HOT = new Token(ChainId.MAINNET, '0xc0FFee0000000000000000000000000000000000', 18, 'HOT', 'Caffeine')\nconst NOT = new Token(ChainId.MAINNET, '0xDeCAf00000000000000000000000000000000000', 18, 'NOT', 'Caffeine')\nconst HOT_NOT = new Pair(new TokenAmount(HOT, '2000000000000000000'), new TokenAmount(NOT, '1000000000000000000'))\nconst NOT_TO_HOT = new Route([HOT_NOT], NOT)\n\nconst trade = new Trade(NOT_TO_HOT, new TokenAmount(NOT, '1000000000000000'), TradeType.EXACT_INPUT)\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"properties\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#properties\",\n        \"aria-label\": \"properties permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Properties`}</h1>\n    <h2 {...{\n      \"id\": \"route\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#route\",\n        \"aria-label\": \"route permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`route`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`route: Route\n`}</code></pre>\n    <p>{`The `}<Link to='/docs/v1/SDK/route#path' mdxType=\"Link\">{`path`}</Link>{` property of the route should be passed as the path parameter to router functions.`}</p>\n    <h2 {...{\n      \"id\": \"tradetype\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#tradetype\",\n        \"aria-label\": \"tradetype permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`tradeType`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`tradeType: TradeType\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`TradeType.EXACT_INPUT`}</inlineCode>{` corresponds to `}<inlineCode parentName=\"p\">{`swapExact*For*`}</inlineCode>{` router functions. `}<inlineCode parentName=\"p\">{`TradeType.EXACT_OUTPUT`}</inlineCode>{` corresponds to `}<inlineCode parentName=\"p\">{`swap*ForExact*`}</inlineCode>{` router functions.`}</p>\n    <h2 {...{\n      \"id\": \"inputamount\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#inputamount\",\n        \"aria-label\": \"inputamount permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`inputAmount`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`inputAmount: TokenAmount\n`}</code></pre>\n    <p>{`For exact input trades, this value should be passed as amountIn to router functions. For exact output trades, this value should be multiplied by a factor >1, representing slippage tolerance, and passed as amountInMax to router functions.`}</p>\n    <h2 {...{\n      \"id\": \"outputamount\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#outputamount\",\n        \"aria-label\": \"outputamount permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`outputAmount`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`outputAmount: TokenAmount\n`}</code></pre>\n    <p>{`For exact output trades, this value should be passed as amountOut to router functions. For exact input trades, this value should be multiplied by a factor <1, representing slippage tolerance, and passed as amountOutMin to router functions.`}</p>\n    <h2 {...{\n      \"id\": \"executionprice\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#executionprice\",\n        \"aria-label\": \"executionprice permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`executionPrice`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`executionPrice: Price\n`}</code></pre>\n    <p>{`The average price that the trade would execute at.`}</p>\n    <h2 {...{\n      \"id\": \"nextmidprice\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#nextmidprice\",\n        \"aria-label\": \"nextmidprice permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`nextMidPrice`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`nextMidPrice: Price\n`}</code></pre>\n    <p>{`What the new mid price would be if the trade were to execute.`}</p>\n    <h2 {...{\n      \"id\": \"slippage\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#slippage\",\n        \"aria-label\": \"slippage permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`slippage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`slippage: Percent\n`}</code></pre>\n    <p>{`The slippage incurred by the trade.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Strictly > .30%.`}</li>\n    </ul>\n    <h1 {...{\n      \"id\": \"methods\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#methods\",\n        \"aria-label\": \"methods permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Methods`}</h1>\n    <p>{`In the context of the following two methods, slippage refers to the percent difference between the actual price and the trade `}<inlineCode parentName=\"p\">{`executionPrice`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"minimumamountout-since-204\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#minimumamountout-since-204\",\n        \"aria-label\": \"minimumamountout since 204 permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`minimumAmountOut (since 2.0.4)`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`minimumAmountOut(slippageTolerance: Percent): TokenAmount\n`}</code></pre>\n    <p>{`Returns the minimum amount of the output token that should be received from a trade, given the slippage tolerance.`}</p>\n    <p>{`Useful when constructing a transaction for a trade of type `}<inlineCode parentName=\"p\">{`EXACT_IN`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"maximumamountin-since-204\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#maximumamountin-since-204\",\n        \"aria-label\": \"maximumamountin since 204 permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`maximumAmountIn (since 2.0.4)`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`maximumAmountIn(slippageTolerance: Percent): TokenAmount\n`}</code></pre>\n    <p>{`Returns the maximum amount of the input token that should be spent on the trade, given the slippage tolerance.`}</p>\n    <p>{`Useful when constructing a transaction for a trade of type `}<inlineCode parentName=\"p\">{`EXACT_OUT`}</inlineCode>{`.`}</p>\n    <h1 {...{\n      \"id\": \"static-methods\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#static-methods\",\n        \"aria-label\": \"static methods permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Static methods`}</h1>\n    <p>{`These static methods provide ways to construct ideal trades from lists of pairs.\nNote these methods do not perform any aggregation across routes, as routes are linear.\nIt’s possible that a better price can be had by combining multiple trades across\ndifferent routes.`}</p>\n    <h2 {...{\n      \"id\": \"besttradeexactin\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#besttradeexactin\",\n        \"aria-label\": \"besttradeexactin permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`bestTradeExactIn`}</h2>\n    <p>{`Given a list of pairs, a fixed amount in, and token amount out,\nthis method returns the best `}<inlineCode parentName=\"p\">{`maxNumResults`}</inlineCode>{` trades that swap\nan input token amount to an output token, making at most `}<inlineCode parentName=\"p\">{`maxHops`}</inlineCode>{` hops.\nThe returned trades are sorted by output amount, in decreasing order, and\nall share the given input amount.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`Trade.bestTradeExactIn(\n    pairs: Pair[],\n    amountIn: TokenAmount,\n    tokenOut: Token,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {}): Trade[]\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"besttradeexactout\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#besttradeexactout\",\n        \"aria-label\": \"besttradeexactout permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`bestTradeExactOut`}</h2>\n    <p>{`Similar to the above method, but targets a fixed output token amount.\nThe returned trades are sorted by input amount, in increasing order,\nand all share the given output amount.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`Trade.bestTradeExactOut(\n    pairs: Pair[],\n    tokenIn: Token,\n    amountOut: TokenAmount,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {}): Trade[]\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}