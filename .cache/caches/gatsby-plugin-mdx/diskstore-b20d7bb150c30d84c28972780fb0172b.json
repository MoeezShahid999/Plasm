{"expireTime":9007200872306530000,"key":"gatsby-plugin-mdx-entire-payload-b2fec4bfdc026eb05ae2057de9c4cfe3-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/Developement/Assignment Tasks/Plasm/src/layouts/docs.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":87,"offset":88},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":90},"end":{"line":5,"column":29,"offset":118},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"constructor(pairs: Pair[], input: Token)","position":{"start":{"line":8,"column":1,"offset":122},"end":{"line":10,"column":4,"offset":182},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The Route entity represents one or more ordered Kwikswap pairs with a fully specified path from input token to output token.","position":{"start":{"line":12,"column":1,"offset":186},"end":{"line":12,"column":125,"offset":310},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":186},"end":{"line":12,"column":125,"offset":310},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Example","position":{"start":{"line":14,"column":3,"offset":316},"end":{"line":14,"column":10,"offset":323},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":314},"end":{"line":14,"column":10,"offset":323},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"import { ChainId, Token, TokenAmount, Pair, Route } from '@kwikswap/sdk'\n\nconst HOT = new Token(ChainId.MAINNET, '0xc0FFee0000000000000000000000000000000000', 18, 'HOT', 'Caffeine')\nconst NOT = new Token(ChainId.MAINNET, '0xDeCAf00000000000000000000000000000000000', 18, 'NOT', 'Caffeine')\nconst HOT_NOT = new Pair(new TokenAmount(HOT, '2000000000000000000'), new TokenAmount(NOT, '1000000000000000000'))\n\nconst route = new Route([HOT_NOT], NOT)","position":{"start":{"line":16,"column":1,"offset":327},"end":{"line":24,"column":4,"offset":798},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Properties","position":{"start":{"line":26,"column":3,"offset":804},"end":{"line":26,"column":13,"offset":814},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":802},"end":{"line":26,"column":13,"offset":814},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"pairs","position":{"start":{"line":28,"column":4,"offset":821},"end":{"line":28,"column":9,"offset":826},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":818},"end":{"line":28,"column":9,"offset":826},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"pairs: Pair[]","position":{"start":{"line":30,"column":1,"offset":830},"end":{"line":32,"column":4,"offset":863},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The ordered pairs that the route is comprised of.","position":{"start":{"line":34,"column":1,"offset":867},"end":{"line":34,"column":50,"offset":916},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":867},"end":{"line":34,"column":50,"offset":916},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"path","position":{"start":{"line":36,"column":4,"offset":923},"end":{"line":36,"column":8,"offset":927},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":920},"end":{"line":36,"column":8,"offset":927},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"path: Token[]","position":{"start":{"line":38,"column":1,"offset":931},"end":{"line":40,"column":4,"offset":964},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The full path from input token to output token.","position":{"start":{"line":42,"column":1,"offset":968},"end":{"line":42,"column":48,"offset":1015},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":968},"end":{"line":42,"column":48,"offset":1015},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"input","position":{"start":{"line":44,"column":4,"offset":1022},"end":{"line":44,"column":9,"offset":1027},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1019},"end":{"line":44,"column":9,"offset":1027},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"input: string","position":{"start":{"line":46,"column":1,"offset":1031},"end":{"line":48,"column":4,"offset":1064},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The input token.","position":{"start":{"line":50,"column":1,"offset":1068},"end":{"line":50,"column":17,"offset":1084},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1068},"end":{"line":50,"column":17,"offset":1084},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"output","position":{"start":{"line":52,"column":4,"offset":1091},"end":{"line":52,"column":10,"offset":1097},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1088},"end":{"line":52,"column":10,"offset":1097},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"output: string","position":{"start":{"line":54,"column":1,"offset":1101},"end":{"line":56,"column":4,"offset":1135},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The output token.","position":{"start":{"line":58,"column":1,"offset":1139},"end":{"line":58,"column":18,"offset":1156},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1139},"end":{"line":58,"column":18,"offset":1156},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"midPrice","position":{"start":{"line":60,"column":4,"offset":1163},"end":{"line":60,"column":12,"offset":1171},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1160},"end":{"line":60,"column":12,"offset":1171},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"midPrice: Price","position":{"start":{"line":62,"column":1,"offset":1175},"end":{"line":64,"column":4,"offset":1210},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Returns the current mid price along the route.","position":{"start":{"line":66,"column":1,"offset":1214},"end":{"line":66,"column":47,"offset":1260},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1214},"end":{"line":66,"column":47,"offset":1260},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":69,"column":1,"offset":1264},"end":{"line":69,"column":31,"offset":1294},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":69,"column":31,"offset":1294}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/Developement/Assignment Tasks/Plasm/src/layouts/docs.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`constructor(pairs: Pair[], input: Token)\n`}</code></pre>\n    <p>{`The Route entity represents one or more ordered Kwikswap pairs with a fully specified path from input token to output token.`}</p>\n    <h1 {...{\n      \"id\": \"example\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#example\",\n        \"aria-label\": \"example permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Example`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import { ChainId, Token, TokenAmount, Pair, Route } from '@kwikswap/sdk'\n\nconst HOT = new Token(ChainId.MAINNET, '0xc0FFee0000000000000000000000000000000000', 18, 'HOT', 'Caffeine')\nconst NOT = new Token(ChainId.MAINNET, '0xDeCAf00000000000000000000000000000000000', 18, 'NOT', 'Caffeine')\nconst HOT_NOT = new Pair(new TokenAmount(HOT, '2000000000000000000'), new TokenAmount(NOT, '1000000000000000000'))\n\nconst route = new Route([HOT_NOT], NOT)\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"properties\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#properties\",\n        \"aria-label\": \"properties permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Properties`}</h1>\n    <h2 {...{\n      \"id\": \"pairs\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#pairs\",\n        \"aria-label\": \"pairs permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`pairs`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`pairs: Pair[]\n`}</code></pre>\n    <p>{`The ordered pairs that the route is comprised of.`}</p>\n    <h2 {...{\n      \"id\": \"path\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#path\",\n        \"aria-label\": \"path permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`path`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`path: Token[]\n`}</code></pre>\n    <p>{`The full path from input token to output token.`}</p>\n    <h2 {...{\n      \"id\": \"input\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#input\",\n        \"aria-label\": \"input permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`input`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`input: string\n`}</code></pre>\n    <p>{`The input token.`}</p>\n    <h2 {...{\n      \"id\": \"output\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#output\",\n        \"aria-label\": \"output permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`output`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`output: string\n`}</code></pre>\n    <p>{`The output token.`}</p>\n    <h2 {...{\n      \"id\": \"midprice\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#midprice\",\n        \"aria-label\": \"midprice permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`midPrice`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`midPrice: Price\n`}</code></pre>\n    <p>{`Returns the current mid price along the route.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}